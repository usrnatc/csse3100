method mult(a:int, b: int) returns (x: int) 
    requires a >= 0 && b >= 0
    ensures x == a * b
{
    {a >= 0}
    x := 0;
    {x == 0 && a >= 0}
    {x == (a - a) * b && a >= 0}
    {forall y :: x == (a - a) * b && a >= 0}
    var y := a;
    {x == (a - y) * b && y >= 0}
    while y > 0
        invariant x == (a - y) * b 
        invariant y >= 0
    {
        x := x + b;
        y := y - 1;
    }
    {x == (a - y) * b && y >= 0 && y <= 0}
    {x == (a - y) * b && y == 0}
    {x == a * b}
}